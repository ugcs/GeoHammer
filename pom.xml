<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ugcs</groupId>
    <artifactId>geohammer</artifactId>
    <packaging>jar</packaging>
    <version>2.0.7-SNAPSHOT</version>
    <name>GeoHammer</name>
    <url>https://github.com/ugcs/UgCS-GeoHammer</url>
    <description>GeoHammer</description>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.release>21</maven.compiler.release>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>

		<checkstyle.version>8.32</checkstyle.version>
		<checkstyle.plugin.version>3.1.1</checkstyle.plugin.version>
		<sevntu.checkstyle.plugin.version>1.37.1</sevntu.checkstyle.plugin.version>

		<gt.version>32.2</gt.version>

		<maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
		<build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
		<launch4j-maven-plugin.version>2.4.1</launch4j-maven-plugin.version>
		<exec-maven-plugin.version>3.1.1</exec-maven-plugin.version>
		<javafx.version>21.0.4</javafx.version>

		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<maven.build.timestamp.format>MMddHHmmss</maven.build.timestamp.format>
	</properties>

	<repositories>
		<repository>
			<id>osgeo</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots><enabled>false</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
		</repository>
	</repositories>



	<build>
		<resources>
    		<resource>
        		<filtering>true</filtering>
        		<directory>src/main/resources</directory>
        		<includes>
            		<include>buildnumber.properties</include>
        		</includes>
    		</resource>
	    	<resource>
        		<filtering>false</filtering>
        		<directory>src/main/resources</directory>
    		</resource>
		</resources>

		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<parameters>true</parameters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
					<dependency>
						<groupId>com.github.sevntu-checkstyle</groupId>
						<artifactId>sevntu-checks</artifactId>
						<version>${sevntu.checkstyle.plugin.version}</version>
					</dependency>
				</dependencies>
				<!-- https://maven.apache.org/plugins/maven-checkstyle-plugin/checkstyle-mojo.html -->
				<!-- Properties for "mvn checkstyle:checkstyle" to execute without mvn
					build -->
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>false</consoleOutput>
					<failsOnError>false</failsOnError>
					<!-- linkXRef=false to avoid WARNING 'Unable to locate Source XRef to
						link to' -->
					<linkXRef>false</linkXRef>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<configuration>
					<longModulepath>false</longModulepath>
				</configuration>
				<executions>
					<execution>
						<id>jlink</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<executable>${java.home}/bin/jlink</executable>
							<arguments>
								<argument>--module-path</argument>
								<argument>${project.build.directory}/*.jar</argument>
								<argument>--add-modules</argument>
								<argument>javafx.controls,javafx.swing,jdk.crypto.cryptoki,java.logging,java.sql,java.naming</argument>
								<argument>--output</argument>
								<argument>${project.build.directory}/jre21</argument>
								<argument>--no-header-files</argument>
								<argument>--no-man-pages</argument>
								<argument>--vm=server</argument>
							</arguments>
							<workingDirectory>../</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>com.ugcs.gprvisualizer.app.MainGeoHammer</mainClass>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>splash_screen.jpg</SplashScreen-Image>
          				</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<!-- jar -->
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
					<!-- zip -->
					<execution>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}_${project.version}_${platform.suffix}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>${zip.content}</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Java FX module support -->
			<!-- Allow to run app with mvn javafx:run -->
		    <plugin>
		        <groupId>org.openjfx</groupId>
		        <artifactId>javafx-maven-plugin</artifactId>
		        <version>0.0.8</version>
		        <configuration>
		            <mainClass>com.ugcs.gprvisualizer.app.MainGeoHammer</mainClass>
		        </configuration>
		    </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<configuration>
					<!-- This is an app, so we don't want to install it in the local Maven repository -->
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.fxgraphics2d</artifactId>
			<version>2.1.4</version>
		</dependency>
		<!-- Core JavaFX modules -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
		</dependency>
    	<dependency>
        	<groupId>org.openjfx</groupId>
       		<artifactId>javafx-controls</artifactId>
        	<version>${javafx.version}</version>
    	</dependency>
		<dependency>
        	<groupId>org.openjfx</groupId>
        	<artifactId>javafx-graphics</artifactId>
        	<version>${javafx.version}</version>
    	</dependency>
		<dependency>
        	<groupId>org.openjfx</groupId>
        	<artifactId>javafx-swing</artifactId>
        	<version>${javafx.version}</version>
    	</dependency>

		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.jspecify</groupId>
			<artifactId>jspecify</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

		<dependency>
			<groupId>gov.nist.math</groupId>
			<artifactId>jama</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
    		<groupId>edu.mines.jtk</groupId>
			<artifactId>edu-mines-jtk</artifactId>
    		<version>1.1.0</version>		
		</dependency>
		<dependency>
			<groupId>org.locationtech.jts</groupId>
			<artifactId>jts-core</artifactId>
			<version>1.20.0</version>
		</dependency>

		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-core</artifactId>
			<version>1.4.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
			<!-- compile time dependency is necessary for URL building -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-aspects</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/uk.m0nom/javaapiforkml -->
		<dependency>
			<groupId>uk.m0nom</groupId>
			<artifactId>javaapiforkml</artifactId>
			<version>3.0.8</version>
		</dependency>

		<dependency>
		    <groupId>com.opencsv</groupId>
		    <artifactId>opencsv</artifactId>
		    <version>5.9</version>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>

		<!-- GeoTools dependencies -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geotiff</artifactId>
			<version>${gt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<scope>test</scope>
			<version>${gt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-coverage</artifactId>
			<version>${gt.version}</version>
		</dependency>

        <!-- Add JUnit 5 dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>windows-build</id>
			<activation>
                <os><family>windows</family></os>
            </activation>
			<properties>
        		<platform.suffix>windows-x86_64</platform.suffix>
        		<zip.content>assembly/windows-zip.xml</zip.content>
      		</properties>
       		<!-- exe -->
       		<build>
	       		<plugins>
					<plugin>
					  <groupId>com.akathist.maven.plugins.launch4j</groupId>
					  <artifactId>launch4j-maven-plugin</artifactId>
					  <version>${launch4j-maven-plugin.version}</version>
					  <executions>
						<execution>
							<id>l4j-gui</id>
							<phase>package</phase>
							<goals><goal>launch4j</goal></goals>
							<configuration>
							<dontWrapJar>false</dontWrapJar>
							<headerType>gui</headerType>
							<jar>${project.build.directory}/${project.artifactId}-jar-with-dependencies.jar</jar>
							<outfile>${project.build.directory}/${project.artifactId}.exe</outfile>
							<errTitle>${project.artifactId}</errTitle>
							<classPath>
							<mainClass>com.ugcs.gprvisualizer.app.MainGeoHammer</mainClass>
							<addDependencies>false</addDependencies>
							</classPath>
							<jre>
								<minVersion>21.0.1</minVersion>
								<path>jre21</path>
							</jre>
							<versionInfo>
								<fileVersion>1.0.0.0</fileVersion>
								<txtFileVersion>${project.version}</txtFileVersion>
								<fileDescription>GeoHammer</fileDescription>
								<copyright>SPH Engeneering 2024</copyright>
								<productVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.0</productVersion>
								<txtProductVersion>${project.version}</txtProductVersion>
								<productName>GeoHammer</productName>
								<internalName>geohammer</internalName>
								<originalFilename>geohammer.exe</originalFilename>
							</versionInfo>
							<splash>
								<file>${project.basedir}/assembly/splash_screen.bmp</file>
								<waitForWindow>true</waitForWindow>
								<timeout>60</timeout>
								<timeoutErr>true</timeoutErr>
							</splash>
						  </configuration>
						</execution>
					  </executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-build</id>
			<activation>
                <os><family>linux</family></os>
            </activation>
			<properties>
        		<platform.suffix>linux-x86_64</platform.suffix>
        		<zip.content>assembly/linux-zip.xml</zip.content>
      		</properties>
      	</profile>
		<profile>
			<id>macos-build</id>
            <activation>
                <os><family>mac</family></os>
            </activation>
			<properties>
        		<platform.suffix>macos-x86_64</platform.suffix>
        		<zip.content>assembly/macos-zip.xml</zip.content>
				<installer.input>${project.build.directory}/installer/input/</installer.input>
      		</properties>
			<build>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec-maven-plugin.version}</version>
                        <executions>
							<execution>
                    			<id>create-installer-dir</id>
                    			<phase>install</phase>
                    			<goals><goal>exec</goal></goals>
                    			<configuration>
                        			<executable>mkdir</executable>
                        			<arguments>
										<argument>-p</argument><argument>${installer.input}</argument>
                        			</arguments>
                    			</configuration>
                			</execution>
							<execution>
                    			<id>copy-jar-file</id>
                    			<phase>install</phase>
                    			<goals><goal>exec</goal></goals>
                    			<configuration>
                        			<executable>cp</executable>
                        			<arguments>
                            			<argument>${project.build.directory}/${project.artifactId}-jar-with-dependencies.jar</argument>
                            			<argument>${installer.input}</argument>
                        			</arguments>
                    			</configuration>
                			</execution>
							<execution>
                    			<id>copy-templates</id>
                    			<phase>install</phase>
                    			<goals><goal>exec</goal></goals>
                    			<configuration>
                        			<executable>cp</executable>
                        			<arguments>
									    <argument>-r</argument><argument>templates</argument><argument>${installer.input}</argument>
                        			</arguments>
                    			</configuration>
                			</execution>
                            <execution>
                                <id>Build Native Mac App</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
								<configuration>
									<executable>${java.home}/bin/jpackage</executable>
									<arguments>
										<argument>--verbose</argument>
										<argument>--type</argument> <argument>app-image</argument>
										<argument>--dest</argument> <argument>${installer.input}/..</argument>
										<argument>--input</argument> <argument>${installer.input}</argument>
										<argument>--name</argument> <argument>${project.name}</argument>
										<argument>--main-class</argument> <argument>com.ugcs.gprvisualizer.app.MainGeoHammer</argument>
										<argument>--main-jar</argument> <argument>${project.artifactId}-jar-with-dependencies.jar</argument>
										<argument>--java-options</argument> <argument>"-splash:splash_screen.jpg -Xmx4096m"</argument>
										<argument>--runtime-image</argument> <argument>${project.build.directory}/jre21</argument>
										<argument>--app-version</argument> <argument>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</argument>
										<argument>--vendor</argument> <argument>"SPH Engeneering"</argument>
										<argument>--copyright</argument> <argument>"© SPH Engeneering, 2024"</argument>
										<argument>--mac-package-identifier</argument> <argument>com.ugcs.gprvisualizer</argument>
										<argument>--mac-package-name</argument> <argument>${project.name}</argument>
										<argument>--icon</argument> <argument>assembly/logo32.icns</argument>
									</arguments>
									<workingDirectory>${project.basedir}/</workingDirectory>
								</configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
      	</profile>
	</profiles>

</project>
