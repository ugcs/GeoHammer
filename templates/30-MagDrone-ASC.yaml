  # Displayable name of Template
  name: "MagDrone ASC"
  # Code of template
  code: "magdrone"
  # Type of template for parsing data. Options are CSV and ColumnsFixedWidth
  file-type: CSV
  # Applies to the first 10 not empty lines of the file to detect template
  match-regex: >-
    ^\s*Timestamp.*Track ID.*Sensor ID.*Latitude.*Longitude.*Total field anomaly.*
  file-format:
  # Applies to CSV type. 'true' if the file has headers, otherwise false
    has-header: true
    # The symbol which uses to make a comment
    comment-prefix: '%'
    # The symbol used to separate the integer part from the fractional part of a number written in decimal form. Options are ',' and '.'
    decimal-separator: '.'
    # Applies to CSV type. The symbol to separate values from line in CSV file;
    separator: '	'
  # Mapping data from source file to data. Requierd fields (latitude, longitude, time and date or date-time)
  data-mapping:
    latitude:
      header: 'Latitude [°]'
    longitude:
      header: 'Longitude [°]'
    altitude:
      header: 'Altitude [m]'
    timestamp:
      header: 'Timestamp [ms]'
    date:
      # Source to parse date. Avaliable values are FileName and Column. Column is default value
      source: FileName
      regex: '\d{4}-\d{2}-\d{2}|\d{4}\d{2}\d{2}'
      formats:
        - 'yyyy-MM-dd'
        - 'yyyyMMdd'
    data-values:
      - header: "Total field anomaly [nT]"
        semantic: "Total field anomaly [nT]"
        units: "nT"
      - header: "Track ID"
        semantic: "Track ID"
        units: ""
      - header: "Altitude [m]"
        semantic: "Altitude"
        units: "m"
      - header: "Mag-X [nT]"
        semantic: "Mag-X"
        units: "nT"
      - header: "Mag-Y [nT]"
        semantic: "Mag-Y"
        units: "nT"
      - header: "Mag-Z [nT]"
        semantic: "Mag-Z"
        units: "nT"
      - header: "Line"
        semantic: "Line"
        units: ""

